services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}"]
      interval: 10s
      retries: 5

  client-build:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./client:/app
    command: sh -c "npm ci && npm run build"

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./server/.env
    environment:
      DB_URL: db
      NODE_ENV: production
      PORT: 5000
    depends_on:
      db:
        condition: service_healthy
      client-build:
        condition: service_completed_successfully

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./client/dist:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - server

volumes:
  pgdata: